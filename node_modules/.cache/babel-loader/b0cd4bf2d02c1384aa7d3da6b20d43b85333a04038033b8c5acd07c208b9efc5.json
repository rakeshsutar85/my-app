{"ast":null,"code":"import _objectSpread from \"/home/rakesh/free/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    var _last;\n    e = \"\".concat(p[p.length - 1], \".\").concat(e);\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if ((_last = last) !== null && _last !== void 0 && _last.obj && typeof last.obj[\"\".concat(last.k, \".\").concat(e)] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[\"\".concat(last.k, \".\").concat(e)] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(\"(\".concat(possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|'), \")\"));\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code === null || code === void 0 ? void 0 : code.replace('_', '-');\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    var _console, _console$apply;\n    (_console = console) === null || _console === void 0 || (_console = _console[type]) === null || _console === void 0 || (_console$apply = _console.apply) === null || _console$apply === void 0 || _console$apply.call(_console, console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, _objectSpread(_objectSpread({}, {\n      prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n    }), this.options));\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    var _this$data;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind((_this$data = this.data) === null || _this$data === void 0 || (_this$data = _this$data[lng]) === null || _this$data === void 0 ? void 0 : _this$data[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = _objectSpread(_objectSpread({}, pack), resources);\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      var _this$processors$proc, _this$processors$proc2;\n      value = (_this$processors$proc = (_this$processors$proc2 = this.processors[processor]) === null || _this$processors$proc2 === void 0 ? void 0 : _this$processors$proc2.process(value, key, options, translator)) !== null && _this$processors$proc !== void 0 ? _this$processors$proc : value;\n    });\n    return value;\n  }\n};\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key == null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return (resolved === null || resolved === void 0 ? void 0 : resolved.res) !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = _objectSpread({}, options);\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if ((lng === null || lng === void 0 ? void 0 : lng.toLowerCase()) === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: \"\".concat(namespace).concat(nsSeparator).concat(key),\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return \"\".concat(namespace).concat(nsSeparator).concat(key);\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved === null || resolved === void 0 ? void 0 : resolved.res;\n    const resUsedKey = (resolved === null || resolved === void 0 ? void 0 : resolved.usedKey) || key;\n    const resExactUsedKey = (resolved === null || resolved === void 0 ? void 0 : resolved.exactUsedKey) || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[\"defaultValue\".concat(this.options.pluralSeparator, \"zero\")] || options[\"defaultValue\".concat(defaultValueSuffix)] || options[\"defaultValue\".concat(defaultValueSuffixOrdinalFallback)] || options.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, _objectSpread(_objectSpread({}, options), {}, {\n          ns: namespaces\n        })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, _objectSpread(_objectSpread({}, options), {}, {\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined\n              }, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n            } else {\n              copy[m] = this.translate(deepKey, _objectSpread(_objectSpread({}, options), {\n                joinArrays: false,\n                ns: namespaces\n              }));\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, _objectSpread(_objectSpread({}, options), {}, {\n            keySeparator: false\n          }));\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          var _this$backendConnecto;\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if ((_this$backendConnecto = this.backendConnector) !== null && _this$backendConnecto !== void 0 && _this$backendConnecto.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[\"defaultValue\".concat(this.options.pluralSeparator, \"zero\")] && suffixes.indexOf(\"\".concat(this.options.pluralSeparator, \"zero\")) < 0) {\n                suffixes.push(\"\".concat(this.options.pluralSeparator, \"zero\"));\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? \"\".concat(namespace, \":\").concat(key) : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this$i18nFormat;\n    var _this = this;\n    if ((_this$i18nFormat = this.i18nFormat) !== null && _this$i18nFormat !== void 0 && _this$i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, _objectSpread(_objectSpread({}, this.options.interpolation.defaultVariables), options), options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      var _options$interpolatio;\n      if (options.interpolation) this.interpolator.init(_objectSpread(_objectSpread({}, options), {\n        interpolation: _objectSpread(_objectSpread({}, this.options.interpolation), options.interpolation)\n      }));\n      const skipOnVariables = isString(res) && ((options === null || options === void 0 || (_options$interpolatio = options.interpolation) === null || _options$interpolatio === void 0 ? void 0 : _options$interpolatio.skipOnVariables) !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = _objectSpread(_objectSpread({}, this.options.interpolation.defaultVariables), data);\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if ((lastKey === null || lastKey === void 0 ? void 0 : lastKey[0]) === args[0] && !options.context) {\n          _this.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames !== null && postProcessorNames !== void 0 && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n        i18nResolved: _objectSpread(_objectSpread({}, resolved), {}, {\n          usedParams: this.getUsedParamsDetails(options)\n        })\n      }, options) : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        var _this$utils, _this$utils2;\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && (_this$utils = this.utils) !== null && _this$utils !== void 0 && _this$utils.hasLoadedNamespace && !((_this$utils2 = this.utils) !== null && _this$utils2 !== void 0 && _this$utils2.hasLoadedNamespace(usedNS))) {\n          checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n          this.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          var _this$i18nFormat2;\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if ((_this$i18nFormat2 = this.i18nFormat) !== null && _this$i18nFormat2 !== void 0 && _this$i18nFormat2.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = \"\".concat(this.options.pluralSeparator, \"zero\");\n            const ordinalPrefix = \"\".concat(this.options.pluralSeparator, \"ordinal\").concat(this.options.pluralSeparator);\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = \"\".concat(key).concat(this.options.contextSeparator).concat(options.context);\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    var _this$i18nFormat3;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if ((_this$i18nFormat3 = this.i18nFormat) !== null && _this$i18nFormat3 !== void 0 && _this$i18nFormat3.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = _objectSpread(_objectSpread({}, this.options.interpolation.defaultVariables), data);\n    }\n    if (!useOptionsReplaceForData) {\n      data = _objectSpread({}, data);\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    var _rule;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return ((_rule = rule) === null || _rule === void 0 ? void 0 : _rule.resolvedOptions().pluralCategories.length) > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => \"\".concat(key).concat(suffix));\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => \"\".concat(this.options.prepend).concat(options.ordinal ? \"ordinal\".concat(this.options.prepend) : '').concat(pluralCategory));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return \"\".concat(this.options.prepend).concat(options.ordinal ? \"ordinal\".concat(this.options.prepend) : '').concat(rule.select(count));\n    }\n    this.logger.warn(\"no plural rule found for: \".concat(code));\n    return this.getSuffix('dev', count, options);\n  }\n}\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    var _options$interpolatio2;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = (options === null || options === void 0 || (_options$interpolatio2 = options.interpolation) === null || _options$interpolatio2 === void 0 ? void 0 : _options$interpolatio2.format) || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if ((existingRegExp === null || existingRegExp === void 0 ? void 0 : existingRegExp.source) === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix));\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix));\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix));\n  }\n  interpolate(str, data, lng, options) {\n    var _options$interpolatio3;\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, _objectSpread(_objectSpread(_objectSpread({}, options), data), {}, {\n          interpolationkey: key\n        })) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, _objectSpread(_objectSpread(_objectSpread({}, options), data), {}, {\n        interpolationkey: k\n      }));\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = (options === null || options === void 0 ? void 0 : options.missingInterpolationHandler) || this.options.missingInterpolationHandler;\n    const skipOnVariables = (options === null || options === void 0 || (_options$interpolatio3 = options.interpolation) === null || _options$interpolatio3 === void 0 ? void 0 : _options$interpolatio3.skipOnVariables) !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(matchedVar, \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      var _matchedSingleQuotes$;\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n      let optionsString = \"{\".concat(c[1]);\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (((_matchedSingleQuotes$ = matchedSingleQuotes === null || matchedSingleQuotes === void 0 ? void 0 : matchedSingleQuotes.length) !== null && _matchedSingleQuotes$ !== void 0 ? _matchedSingleQuotes$ : 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = _objectSpread(_objectSpread({}, inheritedOptions), clonedOptions);\n      } catch (e) {\n        this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n        return \"\".concat(key).concat(sep).concat(optionsString);\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = _objectSpread({}, options);\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, _objectSpread(_objectSpread({}, options), {}, {\n          interpolationkey: match[1].trim()\n        })), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = _objectSpread(_objectSpread({}, optForCache), {}, {\n        [options.interpolationkey]: undefined\n      });\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, _objectSpread({}, opt));\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, _objectSpread(_objectSpread({}, opt), {}, {\n          style: 'currency'\n        }));\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, _objectSpread({}, opt));\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, _objectSpread({}, opt));\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, _objectSpread({}, opt));\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          var _options$formatParams;\n          const valOptions = (options === null || options === void 0 || (_options$formatParams = options.formatParams) === null || _options$formatParams === void 0 ? void 0 : _options$formatParams[options.interpolationkey]) || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, _objectSpread(_objectSpread(_objectSpread({}, formatOptions), options), valOptions));\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(\"there was no format function for \".concat(formatName));\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    var _this$backend, _this$backend$init;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    (_this$backend = this.backend) === null || _this$backend === void 0 || (_this$backend$init = _this$backend.init) === null || _this$backend$init === void 0 || _this$backend$init.call(_this$backend, services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = \"\".concat(lng, \"|\").concat(ns);\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n      if (!err && data) this.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    var _this$services, _this$services2, _this$backend2;\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if ((_this$services = this.services) !== null && _this$services !== void 0 && (_this$services = _this$services.utils) !== null && _this$services !== void 0 && _this$services.hasLoadedNamespace && !((_this$services2 = this.services) !== null && _this$services2 !== void 0 && (_this$services2 = _this$services2.utils) !== null && _this$services2 !== void 0 && _this$services2.hasLoadedNamespace(namespace))) {\n      this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if ((_this$backend2 = this.backend) !== null && _this$backend2 !== void 0 && _this$backend2.create) {\n      const opts = _objectSpread(_objectSpread({}, options), {}, {\n        isUpdate\n      });\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  var _options$supportedLng, _options$supportedLng2;\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (((_options$supportedLng = options.supportedLngs) === null || _options$supportedLng === void 0 || (_options$supportedLng2 = _options$supportedLng.indexOf) === null || _options$supportedLng2 === void 0 ? void 0 : _options$supportedLng2.call(_options$supportedLng, 'cimode')) < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = _objectSpread(_objectSpread(_objectSpread({}, defOpts), this.options), transformOptions(options));\n    this.options.interpolation = _objectSpread(_objectSpread({}, defOpts.interpolation), this.options.interpolation);\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      var _this$options$preload, _this$options$preload2;\n      if ((usedLng === null || usedLng === void 0 ? void 0 : usedLng.toLowerCase()) === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      (_this$options$preload = this.options.preload) === null || _this$options$preload === void 0 || (_this$options$preload2 = _this$options$preload.forEach) === null || _this$options$preload2 === void 0 || _this$options$preload2.call(_this$options$preload, l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        var _this$services$langua, _this$services$langua2;\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        (_this$services$langua = this.services.languageDetector) === null || _this$services$langua === void 0 || (_this$services$langua2 = _this$services$langua.cacheUserLanguage) === null || _this$services$langua2 === void 0 || _this$services$langua2.call(_this$services$langua, l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = _objectSpread({}, opts);\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => \"\".concat(options.keyPrefix).concat(keySeparator).concat(k));\n      } else {\n        resultKey = options.keyPrefix ? \"\".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    var _this$translator;\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return (_this$translator = this.translator) === null || _this$translator === void 0 ? void 0 : _this$translator.translate(...args);\n  }\n  exists() {\n    var _this$translator2;\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return (_this$translator2 = this.translator) === null || _this$translator2 === void 0 ? void 0 : _this$translator2.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    var _this$languages, _this$services3;\n    if (!lng) lng = this.resolvedLanguage || (((_this$languages = this.languages) === null || _this$languages === void 0 ? void 0 : _this$languages.length) > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = ((_this$services3 = this.services) === null || _this$services3 === void 0 ? void 0 : _this$services3.languageUtils) || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {\n      isClone: true\n    });\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = _objectSpread({}, this.services);\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = _objectSpread({}, this.store.data[l]);\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = _objectSpread({}, prev[l][n]);\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };","map":{"version":3,"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","s","t","forEach","m","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","_last","concat","pushPath","push","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","RegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","filter","c","r","map","join","matched","test","ki","substring","deepFind","arguments","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","_console","_console$apply","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","_len","Array","_key","forward","_len2","_key2","_len3","_key3","deprecate","_len4","_key4","lvl","debugOnly","create","moduleName","_objectSpread","clone","baseLogger","EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","from","entries","_ref","observer","numTimesAdded","_ref2","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","_this$data","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","n","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","_this$processors$proc","_this$processors$proc2","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","changeLanguage","language","exists","interpolation","resolved","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","_this$backendConnecto","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","_this$i18nFormat","_this","defaultVariables","skipInterpolation","_options$interpolatio","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","_this$utils","_this$utils2","utils","hasLoadedNamespace","_this$i18nFormat2","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","_this$i18nFormat3","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","_rule","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","regexSafe","val","Interpolator","_options$interpolatio2","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","_options$interpolatio3","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","_matchedSingleQuotes$","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","reduce","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","opts","opt","rest","trimmedKey","isNaN","parseInt","createCachedFormatter","fn","cache","optForCache","formatParams","formatter","Formatter","formats","number","NumberFormat","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","add","addCached","findIndex","mem","formatted","_options$formatParams","valOptions","locale","removePending","q","pending","pendingCount","Connector","backend","store","_this$backend","_this$backend$init","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","_this$services","_this$services2","_this$backend2","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","_options$supportedLng","_options$supportedLng2","initImmediate","noop","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","_this$options$preload","_this$options$preload2","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","_this2","isLanguageChangingTo","setLngProps","setLng","_this$services$langua","_this$services$langua2","cacheUserLanguage","async","detect","getFixedT","keyPrefix","_this3","fixedT","resultKey","_this$translator","_this$translator2","_len5","_key5","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","_this$languages","_this$services3","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","_len6","_key6","instance"],"sources":["/home/rakesh/free/my-app/node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key == null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}